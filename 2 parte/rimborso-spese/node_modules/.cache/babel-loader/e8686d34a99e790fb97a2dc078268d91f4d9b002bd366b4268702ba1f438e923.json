{"ast":null,"code":"let role;\nlet idArray = [];\nlet userId;\nlet tableListRimborso = [];\nexport function mockLink() {\n  return \"https://63453f7439ca915a69f9a522.mockapi.io/api/\";\n}\nexport function mockLinkUser(userId) {\n  return \"https://63453f7439ca915a69f9a522.mockapi.io/api/user/\" + userId;\n}\nexport function mockLinkSpesa(userId) {\n  return \"https://63453f7439ca915a69f9a522.mockapi.io/api/user/\" + userId + \"/spesa\";\n}\nexport async function getRole(username) {\n  console.log(\"%c ___ \", \"background-color:orange;\");\n  await fetch(mockLinkUser(username), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => {\n    role = data.role;\n    console.log(role);\n  }).catch(error => console.log(error));\n  return role;\n}\nexport async function storageRimborsoMax(role) {\n  let maxRefundable = {};\n  await fetch(mockLink() + \"rimborsoMax\").then(response => response.json()).then(data => {\n    for (const key in data) {\n      if (data[key].ruolo == role) {\n        maxRefundable = {\n          taxi: data[key].taxi,\n          vitto: data[key].vitto,\n          hotel: data[key].hotel,\n          treno: data[key].treno\n        };\n      }\n    }\n  }).catch(error => console.log(error));\n  console.log(maxRefundable);\n  return maxRefundable;\n}\nexport async function downloadTable() {\n  console.log(\"%c DOWNLOADING \", \"background-color:DeepPink;color:white;font-size:16px;\");\n  await fetch(mockLinkSpesa(userId), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => jsonToArray(data)).catch(error => console.log(error));\n  console.log(tableListRimborso);\n  // sortByColumn(columnSort, tableListRimborso);\n  // resetTable();\n  // writeCreateTable(tableListRimborso);\n  // undisableForm();\n}\n\nexport function jsonToArray(obj) {\n  let yearMonth = document.getElementById(\"inputMonth\").value;\n  tableListRimborso = [];\n  obj.map(value => {\n    Object.keys(value).map(item => {\n      if (item != \"id\" && item != \"userId\") {\n        let tableDate = value[item].date.match(\"[0-9]{4}[-][0-9]{2}\");\n        if (yearMonth == tableDate) {\n          // value[item].primaryKey = primaryKey++;\n          tableListRimborso.push(value[item]);\n        }\n      }\n    });\n  });\n}\nexport async function SubmitMonthMock() {\n  console.log(\"%c SUBMIT IS STARTING \", \"background-color:brown;color:white;font-size:16px;\");\n  idArray = await getIdByMonthMock();\n  await deleteMockByUserId(idArray);\n  idArray = [];\n  await postTable();\n}\n_c = SubmitMonthMock;\nexport async function getIdByMonthMock() {\n  console.log(\"%c GETTING ID \", \"background-color:red;color:white;font-size:16px;\");\n  await fetch(mockLinkSpesa(userId), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => idMonthSelected(data)).catch(error => console.log(error));\n  console.log(\"ID TO DELETE : \");\n  console.log(idArray);\n  return idArray;\n}\nexport async function idMonthSelected(obj) {\n  let yearMonth = document.getElementById(\"inputMonth\").value;\n  console.log(yearMonth);\n  obj.filter(value => {\n    let tableDate = value[0].date.match(\"[0-9]{4}[-][0-9]{2}\");\n    if (tableDate == yearMonth) {\n      idArray.push(value.id);\n    }\n  });\n}\nexport async function deleteMockByUserId(idArray) {\n  console.log(\"%c DELETING \", \"background-color:black;color:white;font-size:16px;\");\n  for (const element of idArray) {\n    await fetch(mockLinkSpesa(userId) + \"/\" + element, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => console.log(data));\n  }\n}\nexport async function postTable() {\n  // let tableIsEmpty = sumImporto == 0;\n  // if(!tableIsEmpty) {\n  //     console.log(\"%c POSTING \",\"background-color:white;color:black;font-size:16px;\")\n  //     await fetch(mockLinkSpesa(userId),{\n  //         method: \"POST\",\n  //         body: JSON.stringify(tableListRimborso),\n  //         headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {console.log(data); console.log(\"NUOVO ID \" + data.id)})\n  //     .catch(error => console.log(error));\n  // } else {\n  //     console.log(\"%c tableIsEmpty\",\"font-size:16px;\")\n  // }\n  console.log(\"%c SUBMITTING ENDED \", \"background-color:brown;color:white;font-size:16px;\");\n}\nvar _c;\n$RefreshReg$(_c, \"SubmitMonthMock\");","map":{"version":3,"names":["role","idArray","userId","tableListRimborso","mockLink","mockLinkUser","mockLinkSpesa","getRole","username","console","log","fetch","method","headers","then","response","json","data","catch","error","storageRimborsoMax","maxRefundable","key","ruolo","taxi","vitto","hotel","treno","downloadTable","jsonToArray","obj","yearMonth","document","getElementById","value","map","Object","keys","item","tableDate","date","match","push","SubmitMonthMock","getIdByMonthMock","deleteMockByUserId","postTable","idMonthSelected","filter","id","element"],"sources":["C:/Users/ls96/Desktop/Programming/Stage/2 parte/rimborso-spese/src/API/fetchFunc.js"],"sourcesContent":["let role;\r\nlet idArray = [];\r\nlet userId;\r\nlet tableListRimborso = [];\r\n\r\nexport function mockLink() {\r\n\treturn \"https://63453f7439ca915a69f9a522.mockapi.io/api/\";\r\n}\r\nexport function mockLinkUser(userId) {\r\n\treturn \"https://63453f7439ca915a69f9a522.mockapi.io/api/user/\" + userId;\r\n}\r\nexport function mockLinkSpesa(userId) {\r\n\treturn \"https://63453f7439ca915a69f9a522.mockapi.io/api/user/\" + userId + \"/spesa\";\r\n}\r\n\r\nexport async function getRole(username) {\r\n\tconsole.log(\"%c ___ \", \"background-color:orange;\");\r\n\tawait fetch(mockLinkUser(username), {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\trole = data.role;\r\n\t\t\tconsole.log(role);\r\n\t\t})\r\n\t\t.catch((error) => console.log(error));\r\n\treturn role;\r\n}\r\n\r\nexport async function storageRimborsoMax(role) {\r\n\tlet maxRefundable = {};\r\n\tawait fetch(mockLink() + \"rimborsoMax\")\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tfor (const key in data) {\r\n\t\t\t\tif (data[key].ruolo == role) {\r\n\t\t\t\t\tmaxRefundable = {\r\n\t\t\t\t\t\ttaxi: data[key].taxi,\r\n\t\t\t\t\t\tvitto: data[key].vitto,\r\n\t\t\t\t\t\thotel: data[key].hotel,\r\n\t\t\t\t\t\ttreno: data[key].treno,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => console.log(error));\r\n\tconsole.log(maxRefundable);\r\n\treturn maxRefundable;\r\n}\r\n\r\nexport async function downloadTable() {\r\n\tconsole.log(\"%c DOWNLOADING \", \"background-color:DeepPink;color:white;font-size:16px;\");\r\n\tawait fetch(mockLinkSpesa(userId), {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => jsonToArray(data))\r\n\t\t.catch((error) => console.log(error));\r\n\r\n\tconsole.log(tableListRimborso);\r\n\t// sortByColumn(columnSort, tableListRimborso);\r\n\t// resetTable();\r\n\t// writeCreateTable(tableListRimborso);\r\n\t// undisableForm();\r\n}\r\n\r\nexport function jsonToArray(obj) {\r\n\tlet yearMonth = document.getElementById(\"inputMonth\").value;\r\n\ttableListRimborso = [];\r\n\tobj.map((value) => {\r\n\t\tObject.keys(value).map((item) => {\r\n\t\t\tif (item != \"id\" && item != \"userId\") {\r\n\t\t\t\tlet tableDate = value[item].date.match(\"[0-9]{4}[-][0-9]{2}\");\r\n\t\t\t\tif (yearMonth == tableDate) {\r\n\t\t\t\t\t// value[item].primaryKey = primaryKey++;\r\n\t\t\t\t\ttableListRimborso.push(value[item]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport async function SubmitMonthMock() {\r\n\tconsole.log(\"%c SUBMIT IS STARTING \", \"background-color:brown;color:white;font-size:16px;\");\r\n\tidArray = await getIdByMonthMock();\r\n\tawait deleteMockByUserId(idArray);\r\n\tidArray = [];\r\n\tawait postTable();\r\n}\r\n\r\nexport async function getIdByMonthMock() {\r\n\tconsole.log(\"%c GETTING ID \", \"background-color:red;color:white;font-size:16px;\");\r\n\r\n\tawait fetch(mockLinkSpesa(userId), {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => idMonthSelected(data))\r\n\t\t.catch((error) => console.log(error));\r\n\tconsole.log(\"ID TO DELETE : \");\r\n\tconsole.log(idArray);\r\n\treturn idArray;\r\n}\r\n\r\nexport async function idMonthSelected(obj) {\r\n\tlet yearMonth = document.getElementById(\"inputMonth\").value;\r\n\tconsole.log(yearMonth);\r\n\tobj.filter((value) => {\r\n\t\tlet tableDate = value[0].date.match(\"[0-9]{4}[-][0-9]{2}\");\r\n\t\tif (tableDate == yearMonth) {\r\n\t\t\tidArray.push(value.id);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport async function deleteMockByUserId(idArray) {\r\n\tconsole.log(\"%c DELETING \", \"background-color:black;color:white;font-size:16px;\");\r\n\tfor (const element of idArray) {\r\n\t\tawait fetch(mockLinkSpesa(userId) + \"/\" + element, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: { \"Content-type\": \"application/json\" },\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => console.log(data));\r\n\t}\r\n}\r\n\r\nexport async function postTable() {\r\n\t// let tableIsEmpty = sumImporto == 0;\r\n\t// if(!tableIsEmpty) {\r\n\t//     console.log(\"%c POSTING \",\"background-color:white;color:black;font-size:16px;\")\r\n\t//     await fetch(mockLinkSpesa(userId),{\r\n\t//         method: \"POST\",\r\n\t//         body: JSON.stringify(tableListRimborso),\r\n\t//         headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n\t//     })\r\n\t//     .then(response => response.json())\r\n\t//     .then(data => {console.log(data); console.log(\"NUOVO ID \" + data.id)})\r\n\t//     .catch(error => console.log(error));\r\n\t// } else {\r\n\t//     console.log(\"%c tableIsEmpty\",\"font-size:16px;\")\r\n\t// }\r\n\tconsole.log(\"%c SUBMITTING ENDED \", \"background-color:brown;color:white;font-size:16px;\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}