{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ls96\\\\Desktop\\\\Programming\\\\Stage\\\\2 parte\\\\rimborso-spese\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport RefundPage from \"./Pages/RefundPage\";\nimport Header from \"./Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport { useState } from \"react\";\nimport { getRole, storageRimborsoMax } from \"./API/fetchFunc\";\nimport { UserContext } from \"./UserContext\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [auth, setAuth] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    role: \"\"\n  });\n  async function handleUsernameChange(event) {\n    event.preventDefault();\n    const fieldValue = event.target.value;\n    let role = await getRole(fieldValue);\n    console.log(role);\n    setUser({\n      id: fieldValue,\n      role: role\n    });\n  }\n  async function login() {\n    storageRimborsoMax();\n    role ? setAuth(true) : setAuth(false);\n    navigate(`/home/${user.id}`);\n  }\n  const value = useMemo(() => ({\n    user,\n    setAuth\n  }), [user, setAuth]);\n  // funziona che mi controlla se esiste l'id, e se c'è me lo salva in useContext e lo setta true\n\n  // id, ruolo usecontext\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            handleUsernameChange: handleUsernameChange,\n            login: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/refundpage/:id/:month\",\n          element: auth ? /*#__PURE__*/_jsxDEV(RefundPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 59\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home/:id\",\n          element: auth ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Ja9oWltheQ4B/+maknzaCcvS9+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RefundPage","Header","Routes","Route","HomePage","LoginPage","useState","getRole","storageRimborsoMax","UserContext","useMemo","App","auth","setAuth","user","setUser","id","role","handleUsernameChange","event","preventDefault","fieldValue","target","value","console","log","login","navigate"],"sources":["C:/Users/ls96/Desktop/Programming/Stage/2 parte/rimborso-spese/src/App.jsx"],"sourcesContent":["import \"./index.css\";\r\nimport RefundPage from \"./Pages/RefundPage\";\r\nimport Header from \"./Header/Header\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport { useState } from \"react\";\r\nimport { getRole, storageRimborsoMax } from \"./API/fetchFunc\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useMemo } from \"react\";\r\n\r\nfunction App() {\r\n\tconst [auth, setAuth] = useState(false);\r\n\tconst [user, setUser] = useState({\r\n\t\tid: \"\",\r\n\t\trole:\"\",\r\n\t});\r\n\t\r\n\tasync function handleUsernameChange(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst fieldValue = event.target.value;\r\n\t\tlet role = await getRole(fieldValue);\r\n\t\tconsole.log(role);\r\n\t\tsetUser({id:fieldValue, role:role })\r\n\t}\r\n\t\r\n\tasync function login(){\r\n\t\tstorageRimborsoMax();\r\n\t\trole ? setAuth(true) : setAuth(false);\r\n\t\tnavigate(`/home/${user.id}`)\r\n\t}\r\n\tconst value = useMemo(() => ({user, setAuth}), [user, setAuth])\r\n\t// funziona che mi controlla se esiste l'id, e se c'è me lo salva in useContext e lo setta true\r\n\r\n\t// id, ruolo usecontext\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<UserContext.Provider value={value}>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\telement={<LoginPage handleUsernameChange={handleUsernameChange} login={login}/>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path=\"/refundpage/:id/:month\" element={auth ? <RefundPage /> : <LoginPage />} />\r\n\t\t\t\t\t<Route path=\"/home/:id\" element={auth ? <HomePage /> : <LoginPage />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</UserContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,iBAAiB;AAC7D,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,OAAO,QAAQ,OAAO;AAAC;AAEhC,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAChCU,EAAE,EAAE,EAAE;IACNC,IAAI,EAAC;EACN,CAAC,CAAC;EAEF,eAAeC,oBAAoB,CAACC,KAAK,EAAE;IAC1CA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;IACrC,IAAIN,IAAI,GAAG,MAAMV,OAAO,CAACc,UAAU,CAAC;IACpCG,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjBF,OAAO,CAAC;MAACC,EAAE,EAACK,UAAU;MAAEJ,IAAI,EAACA;IAAK,CAAC,CAAC;EACrC;EAEA,eAAeS,KAAK,GAAE;IACrBlB,kBAAkB,EAAE;IACpBS,IAAI,GAAGJ,OAAO,CAAC,IAAI,CAAC,GAAGA,OAAO,CAAC,KAAK,CAAC;IACrCc,QAAQ,CAAE,SAAQb,IAAI,CAACE,EAAG,EAAC,CAAC;EAC7B;EACA,MAAMO,KAAK,GAAGb,OAAO,CAAC,OAAO;IAACI,IAAI;IAAED;EAAO,CAAC,CAAC,EAAE,CAACC,IAAI,EAAED,OAAO,CAAC,CAAC;EAC/D;;EAEA;EACA,oBACC;IAAA,uBACC,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEU,KAAM;MAAA,wBAClC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,MAAM;QAAA,wBACN,QAAC,KAAK;UACL,IAAI,EAAC,GAAG;UACR,OAAO,eAAE,QAAC,SAAS;YAAC,oBAAoB,EAAEL,oBAAqB;YAAC,KAAK,EAAEQ;UAAM;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC/E,eACF,QAAC,KAAK;UAAC,IAAI,EAAC,wBAAwB;UAAC,OAAO,EAAEd,IAAI,gBAAG,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,gBAAG,QAAC,SAAS;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACvF,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,EAAEA,IAAI,gBAAG,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA,QAAG,gBAAG,QAAC,SAAS;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAChE;IAAA;MAAA;MAAA;MAAA;IAAA;EACa;IAAA;IAAA;IAAA;EAAA,QAClB;AAER;AAAC,GAvCQD,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}