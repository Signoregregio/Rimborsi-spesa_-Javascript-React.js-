{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ls96\\\\Desktop\\\\Programming\\\\Stage\\\\2 parte\\\\rimborso-spese\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport RefundPage from \"./Pages/RefundPage\";\nimport Header from \"./Header/Header\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport { useState, useMemo } from \"react\";\nimport { getRole, storageRimborsoMax } from \"./API/fetchFunc\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState({\n    id: \"\",\n    role: \"\"\n  });\n  let navigate = useNavigate();\n  const value = useMemo(() => ({\n    user\n  }), [user]);\n  async function handleUsernameChange(event) {\n    event.preventDefault();\n    const fieldValue = event.target.value;\n    let role = await getRole(fieldValue);\n    console.log(role);\n    setUser({\n      id: fieldValue,\n      role: role\n    });\n  }\n  async function login() {\n    if (user.role) {\n      console.log(user);\n      sessionStorage.setItem(\"user\", user);\n      navigate(`/home/${user.id}`);\n    }\n    if (!user.role) {\n      setUser({\n        id: \"\",\n        role: \"\"\n      });\n    }\n  }\n  // funziona che mi controlla se esiste l'id, e se c'è me lo salva in useContext e lo setta true\n\n  // id, ruolo usecontext\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            handleUsernameChange: handleUsernameChange,\n            login: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/refundpage/:id/:month\",\n          element: /*#__PURE__*/_jsxDEV(RefundPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home/:id\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"P6BZyI9+1Y7UQGAmLrUuHUHRfpQ=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RefundPage","Header","Routes","Route","useNavigate","HomePage","LoginPage","useState","useMemo","getRole","storageRimborsoMax","UserContext","App","user","setUser","id","role","navigate","value","handleUsernameChange","event","preventDefault","fieldValue","target","console","log","login","sessionStorage","setItem"],"sources":["C:/Users/ls96/Desktop/Programming/Stage/2 parte/rimborso-spese/src/App.jsx"],"sourcesContent":["import \"./index.css\";\r\nimport RefundPage from \"./Pages/RefundPage\";\r\nimport Header from \"./Header/Header\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport { useState, useMemo } from \"react\";\r\nimport { getRole, storageRimborsoMax } from \"./API/fetchFunc\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nfunction App() {\r\n\tconst [user, setUser] = useState({\r\n\t\tid: \"\",\r\n\t\trole: \"\",\r\n\t});\r\n\tlet navigate = useNavigate();\r\n\tconst value = useMemo(() => ({ user }), [user]);\r\n\r\n\tasync function handleUsernameChange(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst fieldValue = event.target.value;\r\n\t\tlet role = await getRole(fieldValue);\r\n\t\tconsole.log(role);\r\n\t\tsetUser({ id: fieldValue, role: role });\r\n\t}\r\n\r\n\tasync function login() {\r\n\t\tif (user.role) {\r\n\t\t\tconsole.log(user)\r\n\t\t\tsessionStorage.setItem(\"user\", user);\r\n\t\t\tnavigate(`/home/${user.id}`);\r\n\t\t}\r\n\t\tif (!user.role) {\r\n\t\t\tsetUser({\r\n\t\t\t\tid: \"\",\r\n\t\t\t\trole: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t// funziona che mi controlla se esiste l'id, e se c'è me lo salva in useContext e lo setta true\r\n\r\n\t// id, ruolo usecontext\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<UserContext.Provider value={value}>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/\" element={<LoginPage handleUsernameChange={handleUsernameChange} login={login} />} />\r\n\t\t\t\t\t<Route path=\"/refundpage/:id/:month\" element={<RefundPage />} />\r\n\t\t\t\t\t<Route path=\"/home/:id\" element={<HomePage />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</UserContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,iBAAiB;AAC7D,SAASC,WAAW,QAAQ,eAAe;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAChCQ,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE;EACP,CAAC,CAAC;EACF,IAAIC,QAAQ,GAAGb,WAAW,EAAE;EAC5B,MAAMc,KAAK,GAAGV,OAAO,CAAC,OAAO;IAAEK;EAAK,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAE/C,eAAeM,oBAAoB,CAACC,KAAK,EAAE;IAC1CA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAACL,KAAK;IACrC,IAAIF,IAAI,GAAG,MAAMP,OAAO,CAACa,UAAU,CAAC;IACpCE,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACjBF,OAAO,CAAC;MAAEC,EAAE,EAAEO,UAAU;MAAEN,IAAI,EAAEA;IAAK,CAAC,CAAC;EACxC;EAEA,eAAeU,KAAK,GAAG;IACtB,IAAIb,IAAI,CAACG,IAAI,EAAE;MACdQ,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;MACjBc,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEf,IAAI,CAAC;MACpCI,QAAQ,CAAE,SAAQJ,IAAI,CAACE,EAAG,EAAC,CAAC;IAC7B;IACA,IAAI,CAACF,IAAI,CAACG,IAAI,EAAE;MACfF,OAAO,CAAC;QACPC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE;MACP,CAAC,CAAC;IACH;EACD;EACA;;EAEA;EACA,oBACC;IAAA,uBACC,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEE,KAAM;MAAA,wBAClC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,MAAM;QAAA,wBACN,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,SAAS;YAAC,oBAAoB,EAAEC,oBAAqB;YAAC,KAAK,EAAEO;UAAM;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACpG,QAAC,KAAK;UAAC,IAAI,EAAC,wBAAwB;UAAC,OAAO,eAAE,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAChE,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA;EACa;IAAA;IAAA;IAAA;EAAA,QAClB;AAER;AAAC,GA5CQd,GAAG;EAAA,QAKIR,WAAW;AAAA;AAAA,KALlBQ,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}