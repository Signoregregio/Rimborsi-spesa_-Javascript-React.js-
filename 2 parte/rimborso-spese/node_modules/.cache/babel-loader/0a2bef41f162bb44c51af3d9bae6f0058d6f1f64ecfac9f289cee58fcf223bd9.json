{"ast":null,"code":"let role;\nlet idArray = [];\nlet userId;\nlet tableListRimborso = [];\nexport function mockLink() {\n  return 'https://63453f7439ca915a69f9a522.mockapi.io/api/';\n}\nexport function mockLinkUser(userId) {\n  return 'https://63453f7439ca915a69f9a522.mockapi.io/api/user/' + userId;\n}\nexport function mockLinkSpesa(userId) {\n  return 'https://63453f7439ca915a69f9a522.mockapi.io/api/user/' + userId + '/spesa';\n}\nexport async function getRole(username) {\n  console.log(\"%c ___ \", \"background-color:orange;\");\n  await fetch(mockLinkUser(username), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => {\n    role = data.role;\n    console.log(role);\n  }).catch(error => console.log(error));\n  return role;\n}\nexport async function storageRimborsoMax() {\n  const maxRefundable = {};\n  await fetch(mockLink() + \"rimborsoMax\").then(response => response.json()).then(data => {\n    for (const key in data) {\n      if (data[key].ruolo == role) {\n        maxRefundable.maxTaxi = data[key].taxi;\n        maxRefundable[maxVitto] = data[key].vitto;\n        maxRefundable[maxHotel] = data[key].hotel;\n        maxRefundable[maxTreno] = data[key].treno;\n      }\n    }\n  }).catch(error => console.log(error));\n}\nexport async function downloadTable() {\n  console.log(\"%c DOWNLOADING \", \"background-color:DeepPink;color:white;font-size:16px;\");\n  await fetch(mockLinkSpesa(userId), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => jsonToArray(data)).catch(error => console.log(error));\n  console.log(tableListRimborso);\n  // sortByColumn(columnSort, tableListRimborso);\n  // resetTable();\n  // writeCreateTable(tableListRimborso);\n  // undisableForm();\n}\n\nexport function jsonToArray(obj) {\n  let yearMonth = document.getElementById(\"inputMonth\").value;\n  tableListRimborso = [];\n  obj.map(value => {\n    Object.keys(value).map(item => {\n      if (item != \"id\" && item != \"userId\") {\n        let tableDate = value[item].date.match('[0-9]{4}[-][0-9]{2}');\n        if (yearMonth == tableDate) {\n          // value[item].primaryKey = primaryKey++;\n          tableListRimborso.push(value[item]);\n        }\n      }\n    });\n  });\n}\nexport async function SubmitMonthMock() {\n  console.log(\"%c SUBMIT IS STARTING \", \"background-color:brown;color:white;font-size:16px;\");\n  idArray = await getIdByMonthMock();\n  await deleteMockByUserId(idArray);\n  idArray = [];\n  await postTable();\n}\n_c = SubmitMonthMock;\nexport async function getIdByMonthMock() {\n  console.log(\"%c GETTING ID \", \"background-color:red;color:white;font-size:16px;\");\n  await fetch(mockLinkSpesa(userId), {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(data => idMonthSelected(data)).catch(error => console.log(error));\n  console.log(\"ID TO DELETE : \");\n  console.log(idArray);\n  return idArray;\n}\nexport async function idMonthSelected(obj) {\n  let yearMonth = document.getElementById(\"inputMonth\").value;\n  console.log(yearMonth);\n  obj.filter(value => {\n    let tableDate = value[0].date.match('[0-9]{4}[-][0-9]{2}');\n    if (tableDate == yearMonth) {\n      idArray.push(value.id);\n    }\n  });\n}\nexport async function deleteMockByUserId(idArray) {\n  console.log(\"%c DELETING \", \"background-color:black;color:white;font-size:16px;\");\n  for (const element of idArray) {\n    await fetch(mockLinkSpesa(userId) + '/' + element, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => console.log(data));\n  }\n}\nexport async function postTable() {\n  // let tableIsEmpty = sumImporto == 0;\n  // if(!tableIsEmpty) {\n  //     console.log(\"%c POSTING \",\"background-color:white;color:black;font-size:16px;\")\n  //     await fetch(mockLinkSpesa(userId),{\n  //         method: \"POST\",\n  //         body: JSON.stringify(tableListRimborso),\n  //         headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {console.log(data); console.log(\"NUOVO ID \" + data.id)})\n  //     .catch(error => console.log(error));\n  // } else {\n  //     console.log(\"%c tableIsEmpty\",\"font-size:16px;\")\n  // }\n  console.log(\"%c SUBMITTING ENDED \", \"background-color:brown;color:white;font-size:16px;\");\n}\nvar _c;\n$RefreshReg$(_c, \"SubmitMonthMock\");","map":{"version":3,"names":["role","idArray","userId","tableListRimborso","mockLink","mockLinkUser","mockLinkSpesa","getRole","username","console","log","fetch","method","headers","then","response","json","data","catch","error","storageRimborsoMax","maxRefundable","key","ruolo","maxTaxi","taxi","maxVitto","vitto","maxHotel","hotel","maxTreno","treno","downloadTable","jsonToArray","obj","yearMonth","document","getElementById","value","map","Object","keys","item","tableDate","date","match","push","SubmitMonthMock","getIdByMonthMock","deleteMockByUserId","postTable","idMonthSelected","filter","id","element"],"sources":["C:/Users/ls96/Desktop/Programming/Stage/2 parte/rimborso-spese/src/API/fetchFunc.js"],"sourcesContent":["let role;\r\nlet idArray = [];\r\nlet userId;\r\nlet tableListRimborso = [];\r\n\r\nexport function mockLink() {\r\n    return 'https://63453f7439ca915a69f9a522.mockapi.io/api/'\r\n}\r\nexport function mockLinkUser(userId) {\r\n    return 'https://63453f7439ca915a69f9a522.mockapi.io/api/user/' + userId;\r\n}\r\nexport function mockLinkSpesa(userId) {\r\n    return 'https://63453f7439ca915a69f9a522.mockapi.io/api/user/' + userId + '/spesa';\r\n}\r\n\r\n\r\nexport async function getRole(username) {\r\n    console.log(\"%c ___ \",\"background-color:orange;\");\r\n    await fetch(mockLinkUser(username),{\r\n        method: \"GET\",\r\n        headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {role = data.role; console.log(role)})\r\n    .catch(error => console.log(error));\r\n    return role;\r\n}\r\n\r\nexport async function storageRimborsoMax() {\r\n    const maxRefundable = {};\r\n    await fetch(mockLink() + \"rimborsoMax\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        for (const key in data) {\r\n            if (data[key].ruolo == role) {\r\n                maxRefundable.maxTaxi = data[key].taxi\r\n                maxRefundable[maxVitto] = data[key].vitto\r\n                maxRefundable[maxHotel] = data[key].hotel\r\n                maxRefundable[maxTreno] = data[key].treno\r\n            }\r\n        }})\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport async function downloadTable() {\r\n    console.log(\"%c DOWNLOADING \",\"background-color:DeepPink;color:white;font-size:16px;\")\r\n    await fetch(mockLinkSpesa(userId),{\r\n        method: \"GET\",\r\n        headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => jsonToArray(data))\r\n    .catch(error => console.log(error));\r\n\r\n    console.log(tableListRimborso)\r\n    // sortByColumn(columnSort, tableListRimborso);\r\n    // resetTable();\r\n    // writeCreateTable(tableListRimborso);\r\n    // undisableForm();\r\n}\r\n\r\nexport function jsonToArray(obj) {\r\n    let yearMonth = document.getElementById(\"inputMonth\").value\r\n    tableListRimborso = [];\r\n    obj.map(value => {\r\n        Object.keys(value).map(item => {\r\n            if (item != \"id\" && item != \"userId\") {\r\n                let tableDate = value[item].date.match('[0-9]{4}[-][0-9]{2}');\r\n                if (yearMonth == tableDate) {\r\n                    // value[item].primaryKey = primaryKey++;\r\n                    tableListRimborso.push(value[item]);\r\n                }    \r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport async function SubmitMonthMock() {\r\n    console.log(\"%c SUBMIT IS STARTING \",\"background-color:brown;color:white;font-size:16px;\")\r\n    idArray = await getIdByMonthMock();\r\n    await deleteMockByUserId(idArray)\r\n    idArray = [];\r\n    await postTable();\r\n}\r\n\r\nexport async function getIdByMonthMock() {\r\n    console.log(\"%c GETTING ID \",\"background-color:red;color:white;font-size:16px;\")\r\n\r\n    await fetch(mockLinkSpesa(userId),{\r\n        method: \"GET\",\r\n        headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => idMonthSelected(data))\r\n    .catch(error => console.log(error));\r\n    console.log(\"ID TO DELETE : \")\r\n    console.log(idArray)\r\n    return idArray;\r\n}\r\n\r\nexport async function idMonthSelected(obj) {\r\n    let yearMonth = document.getElementById(\"inputMonth\").value\r\n    console.log(yearMonth)\r\n    obj.filter(value => {\r\n        let tableDate = value[0].date.match('[0-9]{4}[-][0-9]{2}');\r\n        if (tableDate == yearMonth) {\r\n            idArray.push(value.id)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function deleteMockByUserId(idArray) {\r\n    console.log(\"%c DELETING \",\"background-color:black;color:white;font-size:16px;\")\r\n    for (const element of idArray) {\r\n        await fetch(mockLinkSpesa(userId) + '/' + element, {\r\n        method: \"DELETE\",\r\n        headers: {\"Content-type\": \"application/json\"}\r\n      })\r\n    .then(response => { return response.json()})\r\n    .then(data => console.log(data) );\r\n    }\r\n}\r\n\r\nexport async function postTable() {\r\n    // let tableIsEmpty = sumImporto == 0;\r\n    // if(!tableIsEmpty) {\r\n    //     console.log(\"%c POSTING \",\"background-color:white;color:black;font-size:16px;\")\r\n    //     await fetch(mockLinkSpesa(userId),{\r\n    //         method: \"POST\",\r\n    //         body: JSON.stringify(tableListRimborso),\r\n    //         headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\r\n    //     })\r\n    //     .then(response => response.json())\r\n    //     .then(data => {console.log(data); console.log(\"NUOVO ID \" + data.id)})\r\n    //     .catch(error => console.log(error));\r\n    // } else {\r\n    //     console.log(\"%c tableIsEmpty\",\"font-size:16px;\")\r\n    // }\r\n    console.log(\"%c SUBMITTING ENDED \",\"background-color:brown;color:white;font-size:16px;\") \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}